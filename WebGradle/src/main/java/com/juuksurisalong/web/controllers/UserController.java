package com.juuksurisalong.web.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.juuksurisalong.web.data.User;
import com.juuksurisalong.web.repositories.UserRepository;


@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class UserController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@GetMapping(path="/users/{firstName}") // Map ONLY GET Requests
	public @ResponseBody Iterable<User> getUser (@PathVariable("firstName") String firstName) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		return userRepository.findByFirstName(firstName);
	}

	@GetMapping(path="users/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
	
	@GetMapping(path="users/add")
	public @ResponseBody User saveUser(@RequestParam("firstName") String firstname, @RequestParam("lastName") String lastname) {
		// This returns a JSON or XML with the users
		User user = new User();
		user.setFirstName(firstname);
		user.setLastName(lastname);
		userRepository.save(user);
		return user;
	}
}